{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Documentation for Details API",
    "title": "of Details API",
    "version": "1.0.0"
  },
  "basePath": "/",
  "paths": {
    "/Ratings": {
      "put": {
        "description": "Update a Ratings details",
        "tags": [
          "Ratings"
        ],
        "operationId": "updateRating",
        "responses": {
          "201": {
            "$ref": "#/responses/noContentResponse"
          },
          "404": {
            "$ref": "#/responses/errorResponse"
          },
          "422": {
            "$ref": "#/responses/errorValidation"
          }
        }
      }
    },
    "/Ratings/{id}": {
      "get": {
        "description": "Return a list of Ratings from the database",
        "tags": [
          "Ratings"
        ],
        "operationId": "listSingleRating",
        "responses": {
          "200": {
            "$ref": "#/responses/RatingResponse"
          },
          "404": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "Detail": {
      "description": "Detail defines the structure for an Book detail",
      "type": "object",
      "required": [
        "name",
        "isbn",
        "author",
        "publishdate",
        "price"
      ],
      "properties": {
        "author": {
          "description": "the author of the book",
          "type": "string",
          "x-go-name": "Author"
        },
        "bookid": {
          "description": "the id of the book",
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "x-go-name": "BookID"
        },
        "isbn": {
          "description": "the ISBN of the book",
          "type": "string",
          "x-go-name": "ISBN"
        },
        "name": {
          "description": "the name of the book",
          "type": "string",
          "x-go-name": "Name"
        },
        "price": {
          "description": "the price of the book",
          "type": "number",
          "format": "float",
          "minimum": 0.01,
          "x-go-name": "Price"
        },
        "publishdate": {
          "description": "the publish date of the book",
          "type": "string",
          "format": "date-time",
          "x-go-name": "PublishDate"
        }
      },
      "x-go-package": "bookinfo/details/data"
    },
    "DetailPrice": {
      "description": "DetailPrice defines the structure for an Book to update just the price",
      "type": "object",
      "required": [
        "price"
      ],
      "properties": {
        "bookid": {
          "description": "the id of the book",
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "x-go-name": "BookID"
        },
        "price": {
          "description": "the price of the book",
          "type": "number",
          "format": "float",
          "minimum": 0.01,
          "x-go-name": "Price"
        }
      },
      "x-go-package": "bookinfo/details/dto"
    },
    "GenericError": {
      "description": "GenericError is a generic error message returned by a server",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "x-go-name": "Message"
        }
      },
      "x-go-package": "bookinfo/details/handlers"
    },
    "ValidationError": {
      "description": "ValidationError is a collection of validation error messages",
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Messages"
        }
      },
      "x-go-package": "bookinfo/details/handlers"
    }
  },
  "responses": {
    "RatingResponse": {
      "description": "Data structure representing a single rating",
      "schema": {
        "$ref": "#/definitions/Detail"
      }
    },
    "RatingsResponse": {
      "description": "A list of ratings",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Detail"
        }
      }
    },
    "errorResponse": {
      "description": "Generic error message returned as a string",
      "schema": {
        "$ref": "#/definitions/GenericError"
      }
    },
    "errorValidation": {
      "description": "Validation errors defined as an array of strings",
      "schema": {
        "$ref": "#/definitions/ValidationError"
      }
    },
    "noContentResponse": {
      "description": "No content is returned by this API endpoint"
    }
  }
}